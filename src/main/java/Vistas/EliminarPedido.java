/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;

import Conexion.PedidoRepositorio;
import Modelos.PedidosProductos;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author David
 */
public class EliminarPedido extends javax.swing.JPanel {

    private PedidoRepositorio repo;

    /**
     * Creates new form EliminarPedido
     */
    public EliminarPedido() {
        initComponents();
        repo = new PedidoRepositorio();
        cargarTabla();// carga inicial
        cargarTablaAsync();
    }

    private void cargarTabla() {
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
                new Object[]{"ID Producto", "Cantidad Producto"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        List<PedidosProductos> lista = repo.listar();
        if (lista != null) {
            for (PedidosProductos pp : lista) {
                model.addRow(new Object[]{pp.getIDproducto(), pp.getCantidad()});
            }
        }
        jTable1.setModel(model);
    }

    private void cargarTablaPorPedido(int idPedido) {
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
                new Object[]{"ID Producto", "Cantidad Producto"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        List<PedidosProductos> lista = repo.listarPorPedido(idPedido);
        if (lista != null) {
            for (PedidosProductos pp : lista) {
                model.addRow(new Object[]{pp.getIDproducto(), pp.getCantidad()});
            }
        }
        jTable1.setModel(model);
    }

    private void cargarTablaAsync() {
        new javax.swing.SwingWorker<Void, Void>() {
            private javax.swing.table.DefaultTableModel model;

            @Override
            protected Void doInBackground() throws Exception {
                model = new javax.swing.table.DefaultTableModel(new Object[]{"ID Producto", "Cantidad Producto"}, 0) {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };
                List<PedidosProductos> lista = repo.listar();
                if (lista != null) {
                    for (PedidosProductos pp : lista) {
                        model.addRow(new Object[]{pp.getIDproducto(), pp.getCantidad()});
                    }
                }
                return null;
            }

            @Override
            protected void done() {
                jTable1.setModel(model);
            }
        }.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botoneliminarPedido = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        botoneliminarPedido.setBackground(new java.awt.Color(255, 153, 255));
        botoneliminarPedido.setForeground(new java.awt.Color(255, 255, 255));
        botoneliminarPedido.setText("Eliminar pedido");
        botoneliminarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoneliminarPedidoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Producto", "Cantidad Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(botoneliminarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botoneliminarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botoneliminarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoneliminarPedidoActionPerformed
        int fila = jTable1.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un producto a eliminar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Object value = jTable1.getValueAt(fila, 0);
        if (value == null) {
            JOptionPane.showMessageDialog(this, "ID del producto inválido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int idProducto;
        try {
            idProducto = Integer.parseInt(value.toString());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID de producto no es número.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int opcion = JOptionPane.showConfirmDialog(this, "¿Eliminar todas las filas con el producto ID " + idProducto + "?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (opcion != JOptionPane.YES_OPTION) {
            return;
        }

        boolean eliminado = repo.eliminarPorProducto(idProducto);
        if (eliminado) {
            JOptionPane.showMessageDialog(this, "Producto(s) eliminado(s) correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            cargarTablaAsync();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar. Revisa la consola y la BD.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_botoneliminarPedidoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botoneliminarPedido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
